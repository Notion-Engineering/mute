<h3>User</h3>
<p>Name: <%= @user.name if @user.name %></p>
<p>Email: <%= @user.email if @user.email %></p>
<b>Bands: </b>
<ul>
	<% @user.band_list.each do |band| %>
		<li><%= band %></li>
	<% end %>
</ul>

<div ng-controller="mixController" style="width:40%; margin-left:30%">
	<ul id="playlist" type="none" ng-show="adv_songs.length != 0">
		<button ng-click="split_and_think(10, artist_list)">CREAR LISTAS</button>
		<li ng-repeat="so in adv_songs" class="songs_to_play" data-spotify="{{spotify_adv_songs_ids[$index]}}" data-deezer="{{deezer_adv_songs_ids[$index]}}">
			<b>{{so.title}}</b>-{{so.artist_name}}
		</li>
	</ul>
	<input type="text" ng-model="Uid">
	<button ng-click="ask_for_info(Uid)">dsas{{Uid}}</button>
	
	<div ng-show="suggestions.length != 0">
		<ul>
			<li ng-repeat="s in suggestions">
				<div><strong>{{s.title}}</strong>
				<span>{{s.artist_name}}</span>
				</div>
			</li>
		</ul>
	</div>


	<h4>Puede que algunas canciones no est√©n disponibles en alguna plataforma</h4>
	<iframe id="playlisting" class="playButton" src="/json?a=LOADING" width="80" height="80" frameborder="0" allowtransparency="true"></iframe>
	<iframe id="deezerPlaylist" scrolling="no" frameborder="0" allowTransparency="true" src="/json?a=LOADING" width="80" height="80"></iframe>
</div>

<a href="https://accounts.spotify.com/authorize/?client_id=ee0f4eeffd6a4ce183a80baa066176f8&response_type=token&redirect_uri=http://lvh.me:3000/callback&scope=playlist-read-private playlist-modify-public playlist-modify-private user-library-modify user-library-read&state=b210jn0&show_dialog=true"> Conectar con spotify </a>

<script>
	var application = angular.module('Mute', []);
	var talkingAbout = "nothing";
	application.controller('mixController', function($scope, $http) {
		$scope.suggestions = [];
		$scope.artists_array = [];
		var tracks = [];
		$scope.u1 = "<%= @user.band_list %>".split(", ");
		$scope.artist_list = ["Porta", "Zedd", "Deorro", "Pitbull", "Bowling For Soup", "Ariana Grande"];

		$scope.split_and_think = function(n_tracks, artists){
			console.log(artists);
			$scope.suggestions = [];
			var seed = [""];
			if (artists.length > 5){
				var n_of_requests = (artists.length / 5) % 1 ===  0 ? artists.length / 5 : Math.round(artists.length / 5) + 1;
				var n_of_tracks = Math.round(n_tracks / n_of_requests);
				console.log(n_of_requests, n_of_tracks);;

				for (var i = 0; i < artists.length; i = i + 5 ) {
					for (var j = i; j < i + 5; j++) {
						if(typeof artists[i] == "undefined" ){}else{
		                	seed[i] += '&artist=' + artists[j];
						}
		            };
				};
	          
			};
			for (var i = 0; i < artists.length; i = i + 5) {
				seed[i] = seed[i].replace(/&artist=undefined/g, "");
				seed[i] = seed[i].replace(/undefined/g, "");
			};

			for (var i = 0; i < artists.length; i++) {
				seed[i] = seed[5*i];
				if(i != 0)
					seed.splice(5*i, 1);
			};
			for (var i = seed.length - 1; i >= 0; i--) {
				if(typeof seed[i] == "undefined")
					seed.pop();
			};

			for (var i = 0; i < seed.length; i++) {
				if( i+1 == seed.length && (artists.length / 5) % 1 ===  0)
					n_of_tracks--;
				$scope.ask_for_the_songs(n_of_tracks, seed[i]);
			};

			return seed;
		};

		$scope.ask_for_the_songs = function(n_of_tracks, artists){
			var url = 'http://developer.echonest.com/api/v4/playlist/static?api_key=ZCSQWTH1IHKZYUWVX'+artists+'&bucket=id:spotify&bucket=id:deezer&format=json&results='+n_of_tracks+'&type=artist-radio&bucket=tracks&sort=song_hotttnesss-desc';
			$http({
                method: 'GET', url: url
            }).success(function(data){
                $scope.suggestions = $scope.suggestions.concat(data.response.songs);
            });

			//console.log("->", $scope.suggestions);;
		}

		$scope.ask_for_info = function(p_id){
			var ids = p_id.split(",");
			var tmp = [];
			console.log(ids);
			if (ids.length != 0) {
				for(var i = 0; i < ids.length; i++){
					$http({
						method: 'GET', url: "/api/user/artist/" + ids[i]
					}).success(function(data){
						$scope.artists_array.push( data );
						console.log("->", $scope.artists_array);;
					});
				}
			}else{
				console.log(":)");
			}
			
			setTimeout(function(){
				for (var i = 0; i < $scope.artists_array.length; i++) {
					for (var j = 0; j < $scope.artists_array[i].length; j++) {
						tmp.push($scope.artists_array[i][j]);
					};
				};
				console.log(tmp);
				$scope.split_and_think(10, tmp);
			}, 1000);
		}
	});

	

	var tracks = [];
	var u1 = "<%= @user.band_list %>".split(", ");
	var artist_list = ["Porta", "Zedd", "Deorro", "Pitbull", "Bowling For Soup", "Ariana Grande"];

	var split_and_think = function(n_tracks, artists){
		window.tracks = [];
		var seed = [""];
		if (artists.length > 5){
			var n_of_requests = (artists.length / 5) % 1 ===  0 ? artists.length / 5 : Math.round(artists.length / 5) + 1;
			var n_of_tracks = Math.round(n_tracks / n_of_requests);

			for (var i = 0; i < artists.length; i = i + 5 ) {
				for (var j = i; j < i + 5; j++) {
					if(typeof artists[i] == "undefined" ){}else{
	                	seed[i] += '&artist=' + artists[j];
					}
	            };
			};
          
		};
		for (var i = 0; i < artists.length; i = i + 5) {
			seed[i] = seed[i].replace(/&artist=undefined/g, "");
			seed[i] = seed[i].replace(/undefined/g, "");
		};

		for (var i = 0; i < artists.length; i++) {
			seed[i] = seed[5*i];
			if(i != 0)
				seed.splice(5*i, 1);
		};
		for (var i = seed.length - 1; i >= 0; i--) {
			if(typeof seed[i] == "undefined")
				seed.pop();
		};

		for (var i = 0; i < seed.length; i++) {
			if( i+1 == seed.length)
				n_of_tracks--;
			
			ask_for_the_songs(n_of_tracks, seed[i]);
		};

		return seed;
	};

	var ask_for_the_songs = function(n_of_tracks, artists){
		var spotify_url = 'http://developer.echonest.com/api/v4/playlist/static?api_key=ZCSQWTH1IHKZYUWVX'+artists+'&bucket=id:spotify&bucket=id:deezer&format=json&results='+n_of_tracks+'&type=artist-radio&bucket=tracks&sort=song_hotttnesss-desc';
		$.get(spotify_url, function(data){
			console.log(data);
			tracks = tracks.concat(data.response.songs);
		});
	}

</script>